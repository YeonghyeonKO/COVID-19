---
title: "Segmented Regression (3)"
author : "고영현 (2014-19984)"
date: '2020-08-05'
output :
  html_document:
    theme: journal
---

<br>
<br>


```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(knitr)
library(nls2)
library(segmented)
library(gridExtra)
library(lubridate)
library(GGally)

setwd("C:\\Users\\1234\\Desktop\\고영현\\수업\\인턴십\\변수 데이터")

#COVID_19 <- read.csv("COVID-19 Cases.csv")

#corona <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")

#write.csv(corona, "corona_ecdc.csv")

```


<br>
<br>

#### 1. Data Preprocessing

```{r, warning = FALSE}
corona <- read.csv("corona_ecdc.csv") %>%
  mutate(date = make_datetime(year, month, day),
         country = countriesAndTerritories) %>%
  filter(date < "2020-07-11",) %>%
  select(country, date, cases, deaths) %>%
  arrange(country, date) %>%
  mutate()
  

## Case < 0 처리 (0으로 대체)
for (j in which(corona$cases < 0)){corona$cases[j] = 0}

parameters <- read.csv("Fitted_0710.csv") %>%
  select(1, 4:12) %>%
  rename(country = Country,
         a_log = Logistic, b_log = X, c_log = X.1,
         a_ber = Bertalanffy, b_ber = X.2, c_ber = X.3,
         a_gom = Gompertz, b_gom = X.4, c_gom = X.5)

num <- corona %>%
    group_by(country) %>%
    mutate(total = cumsum(cases)) %>%
    filter(total > 0) %>%
    summarise(count = n())


## 국가명 통일
levels(corona$country)[which(num$country == "Dominican_Republic")] = "Dominican Republic"
levels(corona$country)[which(num$country == "South_Korea")] = "Korea, South"
levels(corona$country)[which(num$country == "Saudi_Arabia")] = "Saudi Arabia"
levels(corona$country)[which(num$country == "United_Kingdom")] = "United Kingdom"
levels(corona$country)[which(num$country == "United_States_of_America")] = "US"

parameter <- num %>%
    inner_join(parameters, by = "country")




```

<br>

#### 2. Interpolate / correct the outliers in the countries whose model is not fitted.

```{r}

country2 <- c("China", "Japan", "Nepal", "Puerto_Rico", "Tunisia", "New_Zealand", "Burkina_Faso")

num2 <- num %>%
  filter(country %in% country2)

n <- 0
coef_Poi <- data.frame(); coef_seg_Poi <- data.frame(); coef_seg_u1 <- data.frame()

for (i in num2$country){
  n <- n + 1
  
  data_0710 <- corona %>%
    filter(country == i) %>%
    mutate(total = cumsum(cases)) %>%
    filter(total >= 1) %>%
    mutate(Days_after_first_Case = 1:num2$count[n]) %>%
    filter(date < "2020-07-11")
  
  ## 0 -> 0.5 보정
  # data_0710$cases[which(data_0710$cases == 0)] = 0.5
  
  origin <- data_0710$cases
  result <- pracma::movavg(data_0710$cases, 10, type="m")
    
  sum(origin); sum(result)
    
  ggplot()+
    geom_point(aes(data_0710$Days_after_first_Case, origin), shape = 1, alpha = 0.7) +
    geom_point(aes(data_0710$Days_after_first_Case, result), color = "red")

    
  data_0710$cases = result
  # 데이터셋을 moving average 값으로 대체 (기존 값은 origin에 저장함.)
  
  
  ## Poisson Regression
  fit <- glm(cases ~ log(Days_after_first_Case) + Days_after_first_Case, data = data_0710, family = poisson)
  SSE_Poi <- sum((predict(fit, data.frame(Days_after_first_Case = data_0710$Days_after_first_Case), type = "response") - data_0710$cases)^2)
  SST_Poi <- sum((data_0710$cases - mean(data_0710$cases))^2)
  R_Poi <- 1 - SSE_Poi / SST_Poi
       
  for (k in 1:3){coef_Poi[k, n] <- summary(fit)$coefficients[k, 1]}
  coef_Poi[4, n] <- R_Poi
  colnames(coef_Poi)[n] = i
        
        
  ## Segmented Poisson regression
  seg_fit <- segmented(fit, seg.Z = ~ log(Days_after_first_Case) + Days_after_first_Case, npsi = 1)
  psi <- round(seg_fit$psi[2])
  
  fit1 <- glm(cases[1:psi] ~ log(Days_after_first_Case[1:psi]) + Days_after_first_Case[1:psi], 
              data = data_0710, family = poisson)
  fit2 <- glm(cases[psi+1:num2$count[n]] ~ log(Days_after_first_Case[psi+1:num2$count[n]]) + Days_after_first_Case[psi+1:num2$count[n]], 
              data = data_0710, family = poisson)
  
  SSE_seg_Poi <-sum((predict(seg_fit, data.frame(Days_after_first_Case = data_0710$Days_after_first_Case), type = "response") - data_0710$cases)^2)
  SST_seg_Poi <- sum((data_0710$cases - mean(data_0710$cases))^2)
  R_seg_Poi <- 1 - SSE_seg_Poi / SST_seg_Poi

  for (k in 1:3){coef_seg_Poi[k, n] <- summary(fit1)$coefficients[k, 1]}
  tryCatch(
     expr = {
     for (k in 4:6){coef_seg_Poi[k, n] <- summary(fit2)$coefficients[k-3, 1]}
     },
     error = function(e){
       for (k in 4:6){coef_seg_Poi[k, n] <- NA}
     },
     finally = NULL
  )

  coef_seg_Poi[7, n] <- psi
  coef_seg_Poi[8, n] <- R_seg_Poi
  colnames(coef_seg_Poi)[n] = i
      
  for (k in 1:4){coef_seg_u1[k, n] <- summary(seg_fit)$coefficients[k,1]}
  colnames(coef_seg_u1)[n] = i
  
  
  ## 일일 확진자 plot
  Daily <- ggplot() +
    geom_point(aes(data_0710$Days_after_first_Case, origin), alpha = 0.2) +
    geom_point(aes(data_0710$Days_after_first_Case, result), alpha = 0.2, shape = 3, color = "red") +
    geom_line(aes(data_0710$Days_after_first_Case, fitted(fit)), col = 2) +
    geom_line(aes(data_0710$Days_after_first_Case[1:psi], fitted(fit1)), col = 4) +
    geom_line(aes(data_0710$Days_after_first_Case[(psi+1):num2$count[n]], fitted(fit2)), col = 4) +

    geom_vline(xintercept = psi, linetype = "dotted", col = 4) +
    labs(title = paste0("Daily Cases in ", i),
         subtitle = paste0("R-Square : ", round(coef_Poi[4, n], 4), " (Poisson)",
                           "\nR-Square : ", round(coef_seg_Poi[8, n], 4), " (Segmented Poisson)",
                           "\nBreakpoint : ", round(coef_seg_Poi[7, n], 1)),
         x = "Days after the first case", y = "Daily Cases") +
    theme(plot.title = element_text(size = 15),
          plot.subtitle = element_text(size = 12))

  
  ### 누적 확진자 plot
  Cumulative <- ggplot() +
    geom_point(aes(data_0710$Days_after_first_Case, cumsum(origin)), alpha = 0.2) +
    geom_point(aes(data_0710$Days_after_first_Case, cumsum(result)), alpha = 0.2, shape = 3, color = "red") +
    geom_line(aes(data_0710$Days_after_first_Case, cumsum(fitted(fit))), col = 2) +
    geom_line(aes(data_0710$Days_after_first_Case[1:psi], cumsum(fitted(fit1))), col = 4) +
    geom_line(aes(data_0710$Days_after_first_Case[(psi+1):num2$count[n]], cumsum(fitted(fit1))[psi] + cumsum(fitted(fit2))), col = 4) +

    geom_vline(xintercept = psi, linetype = "dotted", col = 4) +
    labs(title = paste0("Cumulative Cases in ", i),
         x = "Days after the first case", y = "Cumulative Cases") +
    theme(plot.title = element_text(size = 15))

    png(paste0("plots\\Segmented Poisson in ", i, ".png"), 800, 600)

    grid.arrange(Daily, Cumulative, ncol = 2)
    dev.off()
}


```


<br>


